#!/usr/bin/env python3
"""
Script pour v√©rifier les transports via l'application Flask
"""

import os
import sys
from app import app, db
from models import create_models

def check_transports():
    """V√©rifier les transports via l'application Flask"""
    
    with app.app_context():
        try:
            # Cr√©er les mod√®les
            models = create_models(db)
            Transport = models['Transport']
            
            print("üîç V√©rification des transports via Flask...")
            print("=" * 50)
            
            # Compter les transports
            count = Transport.query.count()
            print(f"üìä Nombre total de transports: {count}")
            
            if count > 0:
                # R√©cup√©rer tous les transports
                transports = Transport.query.order_by(Transport.id.desc()).all()
                
                print(f"\nüìã D√©tails des {len(transports)} transports:")
                for transport in transports:
                    print(f"\n  üöõ Transport ID: {transport.id}")
                    print(f"     R√©f√©rence: {transport.ref}")
                    print(f"     Date: {transport.date}")
                    print(f"     Collecte: {transport.lieu_collecte}")
                    print(f"     Livraison: {transport.lieu_livraison}")
                    print(f"     Poids: {transport.poids_tonnes} tonnes")
                    print(f"     Distance: {transport.distance_km} km")
                    print(f"     √âmissions: {transport.emis_kg} kg CO‚ÇÇe")
                    print(f"     √âmissions/t.km: {transport.emis_tkm} kg CO‚ÇÇe/t.km")
                    print(f"     Niveau: {transport.niveau_calcul}")
                    print(f"     Type v√©hicule: {transport.type_vehicule}")
                    print(f"     √ânergie: {transport.energie}")
                    print(f"     Consommation: {transport.conso_vehicule} L/100km")
                    print(f"     V√©hicule d√©di√©: {transport.vehicule_dedie}")
                    print(f"     Client: {transport.client}")
            else:
                print("‚ùå Aucun transport trouv√© dans la base de donn√©es")
            
            # V√©rifier les autres mod√®les
            for model_name in ['Energie', 'Vehicule', 'Client', 'User']:
                if model_name in models:
                    model = models[model_name]
                    count = model.query.count()
                    print(f"üìä Table {model_name}: {count} enregistrements")
            
            print("\n‚úÖ V√©rification termin√©e avec succ√®s")
            return True
            
        except Exception as e:
            print(f"‚ùå Erreur lors de la v√©rification: {e}")
            import traceback
            traceback.print_exc()
            return False

if __name__ == "__main__":
    success = check_transports()
    if not success:
        sys.exit(1)
