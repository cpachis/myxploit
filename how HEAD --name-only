[33mdbcfa4e[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m)[m - Modifier user_loader pour retourner toujours un utilisateur fictif - Ajouter les propri√©t√©s manquantes (nom, telephone, adresse) - Route /dev-login fonctionne maintenant en production - Permet de tester l'interface customer sans authentification"
[33m6690e68[m - Commenter la configuration du login_manager - Ajouter un utilisateur fictif pour le d√©veloppement - Cr√©er une route /dev-login pour connexion automatique - Le syst√®me d'auth reste actif en production"
[33m04ce847[m - Changer login_manager.login_view de 'login' vers 'auth.login' - R√©sout l'erreur BuildError lors de la redirection vers la page de connexion - L'endpoint correct est auth.login car la route est d√©finie dans le blueprint auth_bp"
[33m967c8e1[m - Ajouter l'objet db au dictionnaire des mod√®les dans get_models() - Supprimer la logique de cr√©ation de table qui causait des erreurs - S'assurer que db est disponible dans les blueprints customer et transport_management - Les tables sont cr√©√©es automatiquement par app.py au d√©marrage"
[33m119ca65[m - Ajouter la cr√©ation automatique des tables TransportOrder si elles n'existent pas - G√©rer l'erreur de table manquante dans customer.py et transport_management.py - S'assurer que db.create_all() est appel√© avant les requ√™tes - √âviter les erreurs 500 lors du premier acc√®s aux nouvelles fonctionnalit√©s"
